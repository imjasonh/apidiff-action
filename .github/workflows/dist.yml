# In JavaScript actions, `dist/` is a special directory. When you reference
# an action with the `uses:` property, `dist/index.js` is the code that will be
# run. For this project, the `dist/index.js` file is transpiled from other
# source files. This workflow ensures the `dist/` directory contains the
# expected transpiled code.
#
# If this workflow is run from a feature branch, it will act as an additional CI
# check and fail if the checked-in `dist/` directory does not match what is
# expected from the build.
name: Check and Update dist

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  check-and-update-dist:
    name: Check and Update dist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Build dist/ Directory
        run: npm run build

      - name: Check for changes
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain dist/)" ]; then
            echo "changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "changes=false" >> "$GITHUB_OUTPUT"
          fi

      # For push events and manual triggers, just check and fail if out of date
      - name: Compare Directories (Push/Manual)
        if: github.event_name != 'pull_request' && steps.check-changes.outputs.changes == 'true'
        run: |
          echo "Detected uncommitted changes after build. See diff below:"
          git diff --ignore-space-at-eol --text dist/
          echo ""
          echo "Please run 'npm run build' locally and commit the changes"
          exit 1

      # For PRs from the same repo, update dist automatically
      - name: Update dist (PR)
        if: |
          github.event_name == 'pull_request' &&
          steps.check-changes.outputs.changes == 'true' &&
          github.event.pull_request.head.repo.full_name == github.repository
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/
          git commit -m "chore: update dist" --no-verify
          git push

      - name: Comment on PR
        if: |
          github.event_name == 'pull_request' &&
          steps.check-changes.outputs.changes == 'true' &&
          github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… I\'ve automatically updated the `dist/` directory to match the source code.\n\nThe check will pass on the next run.'
            })

      # For PRs from forks, just fail with instructions
      - name: Fail for fork PRs
        if: |
          github.event_name == 'pull_request' &&
          steps.check-changes.outputs.changes == 'true' &&
          github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "Detected uncommitted changes after build. See diff below:"
          git diff --ignore-space-at-eol --text dist/
          echo ""
          echo "This PR is from a fork. Please run 'npm run build' locally and commit the changes."
          exit 1
